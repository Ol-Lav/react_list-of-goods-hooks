{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","isVisible","setVisibility","sortedBy","setSortBy","isReversed","setIsReversed","minLength","setLength","filteredList","filter","g","length","sort","a","b","localeCompare","reverse","className","type","onClick","name","id","value","onChange","target","map","item","ReactDOM","render","document","getElementById"],"mappings":"oMAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAkIaC,EA/HO,WACpB,MAAmCC,oBAAS,GAA5C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,mBAAS,QAAvC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA+BN,mBAAS,GAAxC,mBAAOO,EAAP,KAAkBC,EAAlB,KAEMC,EAAeX,EAAgBY,QAAO,SAAAC,GAAC,OAAIA,EAAEC,QAAUL,KAsB7D,OAfAE,EAAaI,MAAK,SAACC,EAAGC,GACpB,OAAQZ,GACN,IAAK,MACH,OAAOW,EAAEE,cAAcD,GACzB,IAAK,SACH,OAAOD,EAAEF,OAASG,EAAEH,OACtB,QACE,OAAO,MAITP,GACFI,EAAaQ,UAIb,sBAAKC,UAAU,MAAf,UACE,qBAAIA,UAAU,aAAd,kBAEG,IACApB,EAAgBc,UAGlBX,EAEG,qCACE,sBAAKiB,UAAU,eAAf,UACE,wBACEC,KAAK,SACLD,UAAU,cACVE,QAAS,WACPd,GAAeD,IAJnB,qBAUA,wBACEc,KAAK,SACLD,UAAU,cACVE,QAAS,WACPhB,EAAU,QAJd,iCAUA,wBACEe,KAAK,SACLD,UAAU,cACVE,QAAS,WACP,OAAOhB,EAAU,WAJrB,4BAUA,wBACEe,KAAK,SACLD,UAAU,cACVE,QAjEA,WACZd,GAAc,GACdE,EAAU,IA4DA,sBAUF,sBAAMU,UAAU,0BAAhB,yBAIA,yBACEG,KAAK,YACLC,GAAG,YACHC,MAAOhB,EACPiB,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACXjB,GAAWiB,EAAOF,QALtB,UAQE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,mBAGF,oBAAIL,UAAU,YAAd,SACGT,EAAaiB,KAAI,SAAAC,GAAI,OACpB,oBAAeT,UAAU,YAAzB,SACGS,GADMA,WASf,wBACER,KAAK,SACLD,UAAU,cACVE,QAAS,kBAAMlB,GAAc,IAH/B,uBChIV0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.01ca578f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isVisible, setVisibility] = useState(false);\n  const [sortedBy, setSortBy] = useState('none');\n  const [isReversed, setIsReversed] = useState(false);\n  const [minLength, setLength] = useState(1);\n\n  const filteredList = goodsFromServer.filter(g => g.length >= minLength);\n\n  const reset = () => {\n    setIsReversed(false);\n    setLength(1);\n  };\n\n  filteredList.sort((a, b) => {\n    switch (sortedBy) {\n      case 'abc':\n        return a.localeCompare(b);\n      case 'length':\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    filteredList.reverse();\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">\n        Goods\n        {' '}\n        {goodsFromServer.length}\n      </h1>\n\n      {isVisible\n        ? (\n          <>\n            <div className=\"App__buttons\">\n              <button\n                type=\"button\"\n                className=\"App__button\"\n                onClick={() => {\n                  setIsReversed(!isReversed);\n                }}\n              >\n                Reverse\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"App__button\"\n                onClick={() => {\n                  setSortBy('abc');\n                }}\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"App__button\"\n                onClick={() => {\n                  return setSortBy('length');\n                }}\n              >\n                Sort by length\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"App__button\"\n                onClick={reset}\n              >\n                Reset\n              </button>\n\n            </div>\n\n            <span className=\"App__button-description\">\n              Set length:\n            </span>\n\n            <select\n              name=\"setLength\"\n              id=\"setLength\"\n              value={minLength}\n              onChange={({ target }) => {\n                setLength(+target.value);\n              }}\n            >\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n              <option value=\"10\">10</option>\n            </select>\n\n            <ul className=\"App__list\">\n              {filteredList.map(item => (\n                <li key={item} className=\"App__item\">\n                  {item}\n                </li>\n              ))}\n            </ul>\n\n          </>\n        )\n        : (\n          <button\n            type=\"button\"\n            className=\"App__button\"\n            onClick={() => setVisibility(true)}\n          >\n            Start\n          </button>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}